第一遍，看题目，想解法，如果十几分分想不出来直接看题解，看看别人的解法，最好能够默写出来
第二遍，自己尝试写出
第三遍，隔几天后再次写一下，体会+上自己的优化
第四遍，一周过去后，再来一一遍
第五遍，复习，例如面试前。 (不一定是五遍，而是要做出来自己的体会和思考才是最重要的。) 如果有小手指，帮忙点点。上面的方法是收到，覃超老师的指导的方法。

在你的文章中看到了，很多我复习过程的影子（艾宾浩斯曲线，题海or归纳）
只是你总结的更到位，执行的更细致和坚决
也许就是一般人和top的区别。。



首先，是尽量少找简单题，
就算做也要看看答案的好方法；
其次是找一些通过率60％以下的题，
尝试自己想，不管是不是自己思考出来，
做完都要把答案里面的其他常规方法自己实现一下。
过了几个月之后再参加的时候发现，
周赛基本可以多数时候ac三题了，
偶尔ak或者只ac两道（当然不排除周赛有相比原来放水的原因??????，
不过自我感觉，相比原来，看到题之后思路来的更快了，也容易写出来）


首先找到第一种策略，加以分析，找出其中的缺陷，然后对其优化。

力扣Top100的题先刷；之后就是剑指offer
https://www.nowcoder.com/practice/eac1c953170243338f941959146ac4bf

二分法：https://leetcode.cn/problems/house-robber-iv/solution/er-fen-da-an-dp-by-endlesscheng-m558/


总结：
1.滑动窗口
	和最大的连续子数组
	最短满足条件子串
	
2.双指针
	快慢指针；对撞指针
	盛水最多的容器
	链表相关题目
	
3.单调栈
	接雨水、每日温度、最大矩形面积
	
4.回文字符串dp
	分割回文字符串，变成回文字符串的最少插入次数、删除次数等等
	
5.背包dp
	目标和、0和1、零钱兑换

7.区间dp
	石头合并，戳气球
	dp[i][j]由 dp[i][k], dp[k][j]推导而来

8.状态机dp
	股票交易，k次交易
	股票交易，含冷冻期
	分为手上持有股票和未持有股票两种状态

dp系列题： 打家劫舍系列、股票买卖系列、青蛙跳台阶系列、背包系列、字符串/回文串系列


6.递归
	dfs, 岛屿数量
	最长连续子序列
	
7.回溯
	子集、八皇后
	
8.二叉树
	二叉树的遍历，递归和非递归实现
	公共祖先
	
9.哈希表+双指针
	遍历过程中用哈希表存储


力扣插件：
https://leetcode.cn/circle/discuss/GdaFso/
周赛
https://zerotrac.github.io/leetcode_problem_rating
https://lccn.lbao.site/


注重思维的培养
https://leetcode.cn/circle/discuss/ZZFEWc/